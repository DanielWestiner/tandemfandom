{"version":3,"sources":["components/images/Slider1.png","components/images/Slider2.png","components/images/Slider3.png","components/images/Slider4.png","components/images/Slider5.png","components/layout/Carousel.js","components/pages/Landing.js","components/pages/Main.js","utils/mutations.js","utils/auth.js","components/pages/Login.js","components/pages/Signup.js","components/MatchesList.js","utils/queries.js","components/pages/Matches.js","components/pages/Profile.js","components/layout/NavTabs.js","components/layout/Footer.js","App.js","reportWebVitals.js","index.js","components/images/TFLogo.svg"],"names":["module","exports","CarouselComponent","Carousel","fade","Item","className","src","require","alt","Caption","SmoothScroll","speed","speedAsDuration","Landing","id","href","Main","LOGIN_USER","gql","ADD_USER","ADD_FANDOM","ADD_MATCH","REMOVE_MATCH","decode","this","getToken","token","isTokenExpired","exp","Date","now","err","localStorage","getItem","idToken","setItem","window","location","replace","removeItem","assign","Login","props","useState","email","password","formState","setFormState","useMutation","login","error","data","handleChange","event","target","name","value","handleFormSubmit","a","preventDefault","variables","Auth","console","class","logo","width","onSubmit","placeholder","type","onChange","style","cursor","message","Signup","username","firstName","lastName","userFormData","setUserFormData","addUser","validated","showAlert","setShowAlert","handleInputChange","currentTarget","checkValidity","stopPropagation","Form","noValidate","Alert","dismissible","onClose","show","variant","Group","Label","htmlFor","Control","required","Feedback","Button","disabled","MatchesList","users","me","log","unMatches","setUnMatches","matches","addMatch","handleClick","matchId","loggedIn","_id","filter","match","JSON","parse","stringify","useEffect","notMeUsers","user","meMatches","map","unmatchedUsers","index","undefined","loadMatches","key","image","onClick","fandoms","fandom","to","GET_ME","GET_USERS","GET_FANDOMS","Matches","useQuery","loading","loadingMe","dataMe","Profile","uploadedImages","setUploadedImages","pdata","load","profile","userData","Object","keys","length","apiKey","onSuccess","url","action","description","autoComplete","NavTabs","data-toggle","data-target","aria-controls","aria-expanded","aria-label","auth","logout","Footer","httpLink","createHttpLink","uri","authLink","setContext","_","headers","authorization","client","ApolloClient","link","concat","cache","InMemoryCache","App","ApolloProvider","backgroundColor","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7ce565e8.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Slider1.4a82d53e.png\";","module.exports = __webpack_public_path__ + \"static/media/Slider2.403cd0dc.png\";","module.exports = __webpack_public_path__ + \"static/media/Slider3.9851f9a0.png\";","module.exports = __webpack_public_path__ + \"static/media/Slider4.147ce1e8.png\";","module.exports = __webpack_public_path__ + \"static/media/Slider5.a3b93476.png\";","import { Carousel } from 'react-bootstrap';\r\nimport React from 'react';\r\nimport '../assets/Carousel.css';\r\n\r\nfunction CarouselComponent() {\r\n    return (\r\n  <><Carousel fade>\r\n        <Carousel.Item>\r\n          <img\r\n            className=\"d-block w-100\"\r\n            src={require(\"./../images/Slider1.png\")}\r\n            alt=\"First slide\" />\r\n          <Carousel.Caption>\r\n            <h3>Convention Retention</h3>\r\n            <p>Meet your matches at local conventions</p>\r\n          </Carousel.Caption>\r\n        </Carousel.Item>\r\n\r\n        <Carousel.Item>\r\n          <img\r\n            className=\"d-block w-100\"\r\n            src={require(\"./../images/Slider2.png\")}\r\n            alt=\"Second slide\" />\r\n          <Carousel.Caption>\r\n            <h3>LLLCoolJ</h3>\r\n            <p>Larping Ladies Love Cool Jedi</p>\r\n          </Carousel.Caption>\r\n        </Carousel.Item>\r\n\r\n        <Carousel.Item>\r\n          <img\r\n            className=\"d-block w-100\"\r\n            src={require(\"./../images/Slider3.png\")}\r\n            alt=\"Third slide\" />\r\n          <Carousel.Caption>\r\n            <h3>Stormtrooper Bloopers</h3>\r\n            <p>\"I hit him\", said no Stormtrooper ever</p>\r\n          </Carousel.Caption>\r\n        </Carousel.Item>\r\n\r\n        <Carousel.Item>\r\n          <img\r\n            className=\"d-block w-100\"\r\n            src={require(\"./../images/Slider4.png\")}\r\n            alt=\"Fourth slide\" />\r\n          <Carousel.Caption>\r\n            <h3>Maintain a safe distance</h3>\r\n            <p>Socially distant swordfighting</p>\r\n          </Carousel.Caption>\r\n        </Carousel.Item>\r\n\r\n        <Carousel.Item>\r\n          <img\r\n            className=\"d-block w-100\"\r\n            src={require(\"./../images/Slider5.png\")}\r\n            alt=\"Fifth slide\" />\r\n          <Carousel.Caption>\r\n            <h3>Difference between war and peace</h3>\r\n            <p>The couple that fights together, stays together</p>\r\n          </Carousel.Caption>\r\n        </Carousel.Item>\r\n\r\n        </Carousel>\r\n        </>\r\n    )\r\n};\r\nexport default CarouselComponent;\r\n","import React from \"react\";\r\nimport \"./../assets/Landing.css\";\r\nimport SmoothScroll from \"smooth-scroll\";\r\nimport Carousel from \"./../layout/Carousel\";\r\n\r\nexport const scroll = new SmoothScroll('a[href*=\"#\"]', {\r\n  speed: 1000,\r\n  speedAsDuration: true,\r\n});\r\n\r\nexport default function Landing() {\r\n  return (\r\n    <>\r\n      <header id='header'>\r\n        <div className='intro'>\r\n          <div className='overlay'>\r\n            <div className='container'>\r\n              <div className='row'>\r\n                <div className='col-md-12 intro-text'>\r\n                 <a\r\n                    href='/Signup'\r\n                    className='btn btn-custom btn-lg'\r\n                  >\r\n                    Sign Up\r\n                  </a>{' '}\r\n                  <a\r\n                    href='/Login'\r\n                    className='btn btn-custom btn-lg'\r\n                  >\r\n                    Login\r\n                  </a>{' '}\r\n                  <p>Tandem Fandom is THE people finding app for the Who's Whovian of your favorite fandoms!</p>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </header>\r\n          <div id='features' className='text-center'>\r\n          <div className='container'>\r\n            {/* <div className='col-md-10 col-md-offset-1 section-title'> */}<div className='section-title'>\r\n              <h2>Features</h2>\r\n            </div>\r\n            <div className=''>\r\n              <Carousel/>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react';\r\n\r\nexport default function Main() {\r\n  return (\r\n    <div>\r\n      <h1>Welcome to TandemFandom!</h1>\r\n      <p>\r\n        STUFF\r\n      </p>\r\n    </div>\r\n  );\r\n}\r\n","import { gql } from '@apollo/client';\r\n\r\nexport const LOGIN_USER = gql`\r\n    mutation login($email: String!, $password: String!) {\r\n        login( email: $email, password: $password) {\r\n            token\r\n            user {\r\n                _id\r\n                username\r\n            }\r\n        }\r\n    }\r\n`;\r\n\r\nexport const ADD_USER = gql`\r\n    mutation addUser($username: String!, $email: String!, $password: String!, $firstName: String!, $lastName: String!) {\r\n        addUser(username: $username, email: $email, password: $password, firstName: $firstName, lastName: $lastName) {\r\n            token\r\n            user {\r\n                username \r\n                email \r\n                _id\r\n            }\r\n        }\r\n    }\r\n`;\r\n\r\nexport const ADD_FANDOM = gql`\r\n    mutation addFandom($_id: ID!, $fandomId: ID! ) {\r\n        addFandom(_id: $_id, fandomId: $fandomId) {\r\n            username\r\n            fandoms {\r\n                _id\r\n                name\r\n                description\r\n            }\r\n        }\r\n    }\r\n`;\r\n\r\nexport const REMOVE_FANDOM = gql`\r\n    mutation removeFandom($_id: ID!, $fandomId: ID! ) {\r\n        removeFandom(_id: $_id, fandomId: $fandomId) {\r\n            fandoms {\r\n                _id\r\n                name\r\n                description\r\n            }\r\n        }\r\n    }\r\n`;\r\n\r\nexport const ADD_MATCH = gql`\r\n    mutation addMatch( $_id: ID! ) {\r\n        addMatch( _id: $_id) {\r\n            _id\r\n            username\r\n            firstName\r\n            lastName\r\n            matches {\r\n                _id\r\n                username\r\n                firstName\r\n                lastName\r\n            }\r\n            fandoms {\r\n                _id\r\n                name\r\n                description\r\n            }\r\n        }\r\n    }\r\n`;\r\nexport const REMOVE_MATCH = gql`\r\n    mutation removeMatch($_id: ID!) {\r\n        removeMatch(_id: $_id) {\r\n            _id\r\n            username\r\n            firstName\r\n            lastName\r\n            matches {\r\n                _id\r\n                username\r\n                firstName\r\n                lastName\r\n            }\r\n        }\r\n    }\r\n`;","// use this to decode a token and get the user's information out of it\r\nimport decode from 'jwt-decode';\r\n\r\n// create a new class to instantiate for a user\r\nclass AuthService {\r\n  // get user data\r\n  getProfile() {\r\n    return decode(this.getToken());\r\n  }\r\n\r\n  // check if user's logged in\r\n  loggedIn() {\r\n    // Checks if there is a saved token and it's still valid\r\n    const token = this.getToken();\r\n    return !!token && !this.isTokenExpired(token); // handwaiving here\r\n  }\r\n\r\n  // check if token is expired\r\n  isTokenExpired(token) {\r\n    try {\r\n      const decoded = decode(token);\r\n      if (decoded.exp < Date.now() / 1000) {\r\n        return true;\r\n      } else return false;\r\n    } catch (err) {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  getToken() {\r\n    // Retrieves the user token from localStorage\r\n    return localStorage.getItem('id_token');\r\n  }\r\n\r\n  login(idToken) {\r\n    // Saves user token to localStorage\r\n    localStorage.setItem('id_token', idToken);\r\n    // window.location.assign('/Profile');\r\n    window.location.replace('/Profile');\r\n  }\r\n\r\n  logout() {\r\n    // Clear user token and profile data from localStorage\r\n    localStorage.removeItem('id_token');\r\n    // this will reload the page and reset the state of the application\r\n    window.location.assign('/');\r\n  }\r\n}\r\n\r\nexport default new AuthService();\r\n","import React, { useState } from 'react';\r\nimport { BrowserRouter, Link } from 'react-router-dom';\r\nimport { useMutation } from '@apollo/client';\r\nimport { LOGIN_USER } from '../../utils/mutations';\r\nimport logo from '../images/TFLogo.svg';\r\n\r\nimport Auth from '../../utils/auth';\r\n\r\nconst Login = (props) => {\r\n  const [formState, setFormState] = useState({ email: '', password: '' });\r\n  const [login, { error, data }] = useMutation(LOGIN_USER);\r\n\r\n  // update state based on form input changes\r\n  const handleChange = (event) => {\r\n    const { name, value } = event.target;\r\n\r\n    setFormState({\r\n      ...formState,\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  // submit form\r\n  const handleFormSubmit = async (event) => {\r\n    event.preventDefault();\r\n    try {\r\n      const { data } = await login({\r\n        variables: { ...formState },\r\n      });\r\n\r\n      Auth.login(data.login.token);\r\n    } catch (e) {\r\n      console.error(e);\r\n    }\r\n\r\n    // clear form values\r\n    setFormState({\r\n      email: '',\r\n      password: '',\r\n    });\r\n  };\r\n\r\n  return (\r\n    <>\r\n       <div class=\"text-center\">\r\n    <img src={logo} width=\"300\" alt=\"Tandem Fandom\" />\r\n</div>\r\n    \r\n     <hr></hr>\r\n    <main className=\"flex-row justify-center mb-4\">\r\n      <div className=\"col-12 col-lg-10\">\r\n        <div className=\"card\">\r\n          <h4 className=\"card-header bg-dark text-light p-2\">Login</h4>\r\n          <div className=\"card-body\">\r\n            {data ? (\r\n              <p>\r\n                Success!\r\n              </p>\r\n            ) : (\r\n              <form onSubmit={handleFormSubmit}>\r\n                <input\r\n                  className=\"form-input m-2\"\r\n                  placeholder=\"Your email\"\r\n                  name=\"email\"\r\n                  type=\"email\"\r\n                  value={formState.email}\r\n                  onChange={handleChange}\r\n                />\r\n                <input\r\n                  className=\"form-input m-2\"\r\n                  placeholder=\"Password\"\r\n                  name=\"password\"\r\n                  type=\"password\"\r\n                  value={formState.password}\r\n                  onChange={handleChange}\r\n                />\r\n                <button\r\n                  className=\"btn btn-block btn-info m-2\"\r\n                  style={{ cursor: 'pointer' }}\r\n                  type=\"submit\"\r\n                >\r\n                  Submit\r\n                </button>\r\n              </form>\r\n            )}\r\n\r\n            {error && (\r\n              <div className=\"my-3 p-3 bg-danger text-white\">\r\n                {error.message}\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </main>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","import React, { useState } from 'react';\r\nimport { Form, Button, Alert } from 'react-bootstrap';\r\nimport { useMutation} from '@apollo/client';\r\nimport logo from '../images/TFLogo.svg';\r\n\r\nimport Auth from '../../utils/auth';\r\nimport { ADD_USER } from '../../utils/mutations';\r\n\r\n\r\nconst Signup = () => {\r\n  // set initial form state\r\n  const [userFormData, setUserFormData] = useState({ username: '', email: '', password: '' , firstName: '', lastName: ''});\r\n\r\n  const [addUser] = useMutation(ADD_USER);\r\n  // set state for form validation\r\n  const [validated] = useState(false);\r\n  // set state for alert\r\n  const [showAlert, setShowAlert] = useState(false);\r\n\r\n  const handleInputChange = (event) => {\r\n    const { name, value } = event.target;\r\n    setUserFormData({ ...userFormData, [name]: value });\r\n  };\r\n\r\n  const handleFormSubmit = async (event) => {\r\n    event.preventDefault();\r\n\r\n    // check if form has everything (as per react-bootstrap docs)\r\n    const form = event.currentTarget;\r\n    if (form.checkValidity() === false) {\r\n      event.preventDefault();\r\n      event.stopPropagation();\r\n    }\r\n\r\n    try {\r\n      const { data } = await addUser({\r\n        variables: { ...userFormData },\r\n      });\r\n\r\n      \r\n      Auth.login(data.addUser.token);\r\n    } catch (err) {\r\n      console.error(err);\r\n      setShowAlert(true);\r\n    }\r\n\r\n    setUserFormData({\r\n      username: '',\r\n      email: '',\r\n      password: '',\r\n    });\r\n  };\r\n\r\n  return (\r\n    <>\r\n    <div class=\"text-center\">\r\n    <img src={logo} width=\"300\" alt=\"Tandem Fandom\" />\r\n</div>\r\n    \r\n     <hr></hr>\r\n      {/* This is needed for the validation functionality above */}\r\n      <Form noValidate validated={validated} onSubmit={handleFormSubmit}>\r\n        {/* show alert if server response is bad */}\r\n        <Alert dismissible onClose={() => setShowAlert(false)} show={showAlert} variant='danger'>\r\n          Something went wrong with your signup!\r\n        </Alert>\r\n\r\n        <Form.Group>\r\n          <Form.Label htmlFor='firstName'>First Name</Form.Label>\r\n          <Form.Control\r\n            type='text'\r\n            placeholder='First Name'\r\n            name='firstName'\r\n            onChange={handleInputChange}\r\n            value={userFormData.firstName}\r\n            required\r\n          />\r\n          <Form.Control.Feedback type='invalid'>First Name is required!</Form.Control.Feedback>\r\n        </Form.Group>\r\n        <Form.Group>\r\n          <Form.Label htmlFor='firstName'>Last Name</Form.Label>\r\n          <Form.Control\r\n            type='text'\r\n            placeholder='Last Name'\r\n            name='lastName'\r\n            onChange={handleInputChange}\r\n            value={userFormData.lastName}\r\n            required\r\n          />\r\n          <Form.Control.Feedback type='invalid'>Last Name is required!</Form.Control.Feedback>\r\n        </Form.Group>\r\n        <Form.Group>\r\n          <Form.Label htmlFor='username'>Username</Form.Label>\r\n          <Form.Control\r\n            type='text'\r\n            placeholder='Your username'\r\n            name='username'\r\n            onChange={handleInputChange}\r\n            value={userFormData.username}\r\n            required\r\n          />\r\n          <Form.Control.Feedback type='invalid'>Username is required!</Form.Control.Feedback>\r\n        </Form.Group>\r\n\r\n        <Form.Group>\r\n          <Form.Label htmlFor='email'>Email</Form.Label>\r\n          <Form.Control\r\n            type='email'\r\n            placeholder='Your email address'\r\n            name='email'\r\n            onChange={handleInputChange}\r\n            value={userFormData.email}\r\n            required\r\n          />\r\n          <Form.Control.Feedback type='invalid'>Email is required!</Form.Control.Feedback>\r\n        </Form.Group>\r\n\r\n        <Form.Group>\r\n          <Form.Label htmlFor='password'>Password</Form.Label>\r\n          <Form.Control\r\n            type='password'\r\n            placeholder='Your password'\r\n            name='password'\r\n            onChange={handleInputChange}\r\n            value={userFormData.password}\r\n            required\r\n          />\r\n          <Form.Control.Feedback type='invalid'>Password is required!</Form.Control.Feedback>\r\n        </Form.Group>\r\n        \r\n        <Button\r\n          disabled={!(userFormData.username && userFormData.email && userFormData.password)}\r\n          type='submit'\r\n          variant='success'>\r\n          Submit\r\n        </Button>\r\n      </Form>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Signup;","import React, { useContext, useEffect, useState } from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { useMutation } from \"@apollo/client\";\r\nimport Auth from \"../utils/auth\";\r\n\r\nimport { ADD_MATCH } from \"../utils/mutations\";\r\nimport { REMOVE_MATCH } from \"../utils/mutations\";\r\n\r\nexport default function MatchesList({ users, me }) {\r\n  console.log({ users }, { me });\r\n  const [unMatches, setUnMatches] = useState([]);\r\n  const [matches, setMatches] = useState(me.matches);\r\n  // const [matches, setMatches] = useState(me.matches);\r\n\r\n  const [addMatch, { error }] = useMutation(ADD_MATCH);\r\n  const [removeMatch] = useMutation(REMOVE_MATCH);\r\n\r\n  const handleClick = async (matchId) => {\r\n    const token = Auth.loggedIn() ? Auth.getToken() : null;\r\n\r\n    if (!token) {\r\n      return false;\r\n    }\r\n\r\n    try {\r\n      const { data } = await addMatch({\r\n        variables: { _id: matchId },\r\n      });\r\n\r\n      setUnMatches([...unMatches.filter((match) => match._id !== matchId)]);\r\n\r\n      Auth.login(data.users.token);\r\n    } catch (err) {\r\n      console.error(JSON.parse(JSON.stringify(err)));\r\n    }\r\n  };\r\n\r\n  // const handleRemoveClick = async (matchId) => {\r\n  //   const token = Auth.loggedIn() ? Auth.getToken() : null;\r\n\r\n  //   if (!token) {\r\n  //     return false;\r\n  //   }\r\n\r\n  //   try {\r\n  //     const { data } = await removeMatch({\r\n  //       variables: { _id: matchId },\r\n  //     });\r\n\r\n  //     setMatches([...matches.filter((match) => match._id !== matchId)]);\r\n\r\n  //     Auth.login(data.users.token);\r\n  //   } catch (err) {\r\n  //     console.error(JSON.parse(JSON.stringify(err)));\r\n  //   }\r\n  // };\r\n\r\n  useEffect(() => {\r\n    loadMatches();\r\n  }, []);\r\n  \r\n  function loadMatches() {\r\n    const notMeUsers = users.filter((user) => user._id !== me._id);\r\n    console.log(notMeUsers);\r\n\r\n    const meMatches = me.matches.map((match) => match._id);\r\n    console.log(meMatches);\r\n\r\n    const unmatchedUsers = notMeUsers.filter((user, index) => {\r\n      console.log(meMatches[index]);\r\n      if (meMatches[index] === undefined) {\r\n        return true;\r\n      } else {\r\n        return false;\r\n      }\r\n\r\n      \r\n    });\r\n    setUnMatches(unmatchedUsers);\r\n  }\r\n  \r\n\r\n  if (!Auth.loggedIn()) {\r\n    return <Redirect to=\"/login\" />\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>Matches</h1>\r\n      <div className=\"row\">\r\n        {matches.map((user, index) => {\r\n          return (\r\n            <div className=\"col my-4\" key={user._id}>\r\n              <div className=\"card\" style={{ width: `18rem` }}>\r\n                <img\r\n                  className=\"card-img-top\"\r\n                  src={`${user.image}`}\r\n                  alt=\"users profile\"\r\n                />\r\n                <div className=\"card-body\">\r\n                  <h5 className=\"card-title text-center\">\r\n                    {user.firstName} {user.lastName}\r\n                  </h5>\r\n                  <h6 className=\"card-text\">Fandoms:</h6>\r\n                  {/* {user.matches.fandoms.map((fandom) => {\r\n                    return (\r\n                      <p className=\"card-text\" key={fandom._id}>\r\n                        {fandom.name}\r\n                      </p>\r\n                    );\r\n                  })} */}\r\n                  <div className=\"text-center\">\r\n                    <button\r\n                      className=\"btn-block btn-warning\"\r\n                      type=\"button\"\r\n                      onClick={() => handleClick(user._id)}\r\n                    >\r\n                      Remove Match\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          );\r\n        })}\r\n      </div>\r\n      <h1>UnMatches</h1>\r\n      <div className=\"row\">\r\n        {unMatches.map((user, index) => {\r\n          return (\r\n            <div className=\"col my-4\" key={user._id}>\r\n              <div className=\"card\" style={{ width: `18rem` }}>\r\n                <img\r\n                  className=\"card-img-top\"\r\n                  src={`${user.image}`}\r\n                  alt=\"users profile\"\r\n                />\r\n                <div className=\"card-body\">\r\n                  <h5 className=\"card-title text-center\">\r\n                    {user.firstName} {user.lastName}\r\n                  </h5>\r\n                  <h6 className=\"card-text\">Fandoms:</h6>\r\n                  {user.fandoms.map((fandom) => {\r\n                    return (\r\n                      <p className=\"card-text\" key={fandom._id}>\r\n                        {fandom.name}\r\n                      </p>\r\n                    );\r\n                  })}\r\n                  <div className=\"text-center\">\r\n                    <button\r\n                      className=\"btn-block btn-success\"\r\n                      type=\"button\"\r\n                      onClick={() => handleClick(user._id)}\r\n                    >\r\n                      Add Match\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          );\r\n        })}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import { gql } from '@apollo/client';\r\n\r\nexport const GET_ME = gql`\r\n    query me {\r\n        me {\r\n            _id\r\n            username\r\n            email\r\n            firstName\r\n            lastName\r\n            matches {\r\n                _id\r\n                username\r\n                email\r\n                firstName\r\n                lastName\r\n            }\r\n            fandoms {\r\n                _id\r\n                description\r\n                name\r\n            }\r\n        }\r\n    }\r\n`;\r\n\r\nexport const GET_USERS = gql`\r\n    query users {\r\n        users {\r\n            _id\r\n            username\r\n            firstName\r\n            lastName\r\n            image\r\n            fandoms {\r\n                _id\r\n                description\r\n                name\r\n            }\r\n        }\r\n    }\r\n`;\r\n\r\nexport const GET_FANDOMS = gql`\r\n    query fandoms {\r\n        fandoms {\r\n            _id\r\n            name\r\n            description\r\n            image\r\n        }\r\n    }\r\n`;\r\n","import React, { useState } from \"react\";\r\nimport { useQuery } from \"@apollo/client\";\r\nimport MatchesList from \"../MatchesList\";\r\n\r\nimport { GET_USERS } from \"../../utils/queries\";\r\nimport { GET_ME } from \"../../utils/queries\";\r\n\r\nexport default function Matches() {\r\n  const { loading, data } = useQuery(GET_USERS);\r\n  const users = data?.users || [];\r\n\r\n  const { loading: loadingMe, data: dataMe } = useQuery(GET_ME);\r\n  const me = dataMe?.me || {};\r\n  console.log({ users }, { me });\r\n\r\n  return (\r\n    <div>\r\n      {loadingMe ? (\r\n        <div>Loading...</div>\r\n      ) : (\r\n        <MatchesList users={users} me={me} />\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { useMutation, useQuery } from \"@apollo/client\";\r\nimport Auth from \"../../utils/auth\";\r\nimport \"./../assets/Profile.css\";\r\nimport ImageUploading from \"react-images-uploading\";\r\nimport ReactDom from \"react-dom\";\r\nimport SimpleFileUpload from 'react-simple-file-upload'\r\n\r\nimport { GET_ME } from \"../../utils/queries\";\r\nimport { GET_FANDOMS } from \"../../utils/queries\";\r\nimport { ADD_FANDOM } from \"../../utils/mutations\";\r\n\r\nexport default function Profile() {\r\n  // Daniel's edits\r\n  const [uploadedImages, setUploadedImages] = useState([])\r\n\r\n  function handleFile(url) {\r\n    setUploadedImages([...uploadedImages, url])\r\n    console.log('The URL of the file is ' + url)\r\n  }\r\n  \r\n  // Jose's edits\r\n  const { load, pdata } = useQuery(GET_ME);\r\n  const profile = pdata?.me || {};\r\n\r\n  const { loading, data } = useQuery(GET_FANDOMS);\r\n  const fandoms = data?.fandoms || [];\r\n\r\n  const [userData, setUserData] = useState({});\r\n  const [checked, setChecked] = useState({});\r\n\r\n  // function toggle(index) {\r\n  //   const newData = [...userData];\r\n  //   newData.splice(index, 1, {\r\n  //     label: data[index].label,\r\n  //     checked: !data[index].checked\r\n  //   });\r\n  //   setData(newData);\r\n  //   onChange(newData.filter(x => x.checked));\r\n  // };\r\n\r\n//   handleInputChange({ target }) ;{\r\n//     const value = target.type === 'checkbox' ? target.checked : target.value;\r\n//     this.setState({ [target.name]: value });\r\n// }\r\n\r\n  const userDataLength = Object.keys(userData).length;\r\n\r\n  const [updatedUser, { error }] = useMutation(ADD_FANDOM);\r\n  const handleAddFandom = async (fandomId) => {\r\n    const token = Auth.loggedIn() ? Auth.getToken() : null;\r\n\r\n    if (!token) {\r\n      return false;\r\n    }\r\n\r\n    try {\r\n      const { data } = await updatedUser({\r\n        variables: { ...userData },\r\n      });\r\n\r\n      setUserData(updatedUser);\r\n      // upon success, remove book's id from localStorage\r\n      // need to make in local storage js in utils\r\n      // addFandom(fandomId);\r\n    } catch (err) {\r\n      console.error(err);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div>\r\n        <h1>Profile Page</h1>\r\n        <p>Profile Page goes here</p>\r\n      \r\n        <SimpleFileUpload\r\n          apiKey=\"a576e70cb4dce38730545ffcbe16a477\"\r\n          onSuccess={handleFile}\r\n        />\r\n\r\n      </div>\r\n      <div className='upload-wrapper'>\r\n        <div className=\"img-landing\">\r\n          <ul className=\"image-grid\">\r\n            {uploadedImages.length ? (\r\n              uploadedImages.map((image, index) => (index === 0 &&\r\n                <li>\r\n                  <img className=\"img-fluid profile-img\" src={image} alt=\"profile images\" />\r\n                </li>\r\n              ))\r\n            ) : (\r\n              <p></p>\r\n            )}\r\n          </ul>\r\n        </div>\r\n      </div>\r\n      <div className=\"container\">\r\n        <h1>{`${profile.name}'s`} Profile Page</h1>\r\n        <div className=\"container\">\r\n          <form action=\"\">\r\n            <div className=\"row\">\r\n              {fandoms.map((fandom, index) => {\r\n                return (\r\n                  <div className=\"card col-lg-4 col-md-6 col-sm-12\" style={{ width: `18rem` }} key={fandom._id}>\r\n                    <img\r\n                      className=\"card-img-top\"\r\n                      src={`${fandom.image}`}\r\n                      alt={`${fandom.name} logo`}\r\n                    />\r\n                    <div className=\"card-body\">\r\n                      <h5 className=\"card-title text-center\">{fandom.name}</h5>\r\n                      <p className=\"card-text\">{fandom.description}</p>\r\n                      <div className=\"text-center\">\r\n                        <input\r\n                          type=\"checkbox\"\r\n                          value={`${fandom._id}`}\r\n                          className=\"btn-check\"\r\n                          id=\"btn-check-outlined\"\r\n                          autoComplete=\"off\"\r\n                        // onChange={toggle}\r\n                        />\r\n                        <label\r\n                          id=\"label\"\r\n                          className=\"btn btn-outline-primary\"\r\n                          htmlFor=\"btn-check-outlined\"\r\n                        >\r\n                          Add\r\n                        </label>\r\n                        <br></br>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                );\r\n              })}\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nimport { Link } from \"react-router-dom\";\r\nimport \"../assets/Nav.css\";\r\nimport logo from \"../images/TFLogo.svg\";\r\n\r\nimport auth from \"../../utils/auth\";\r\n\r\nfunction NavTabs() {\r\n  return (\r\n    <nav className=\"navbar navbar-expand-lg navbar-light py-3\">\r\n      <a className=\"navbar-brand\" href=\"#\">\r\n        <img src={logo} width=\"125\" alt=\"Tandem Fandom\" />\r\n      </a>\r\n      <button\r\n        className=\"navbar-toggler\"\r\n        type=\"button\"\r\n        data-toggle=\"collapse\"\r\n        data-target=\"#navbarNav\"\r\n        aria-controls=\"navbarNav\"\r\n        aria-expanded=\"false\"\r\n        aria-label=\"Toggle navigation\"\r\n      >\r\n        <span className=\"navbar-toggler-icon\"></span>\r\n      </button>\r\n\r\n      <div className=\"collapse navbar-collapse\" id=\"navbarNav\">\r\n        <ul className=\"navbar-nav mr-auto\">\r\n          {auth.loggedIn() && (\r\n            <>\r\n              <li className=\"nav-item\">\r\n                <Link className=\"navbar-brand\" to=\"/Profile\">\r\n                  Profile\r\n                </Link>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <Link className=\"navbar-brand\" to=\"/Matches\">\r\n                  Matches\r\n                </Link>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <Link className=\"navbar-brand nav-link\" onClick={auth.logout()} to=\"/\">\r\n                  Logout\r\n                </Link>\r\n              </li>\r\n            </>\r\n          )}\r\n          {!auth.loggedIn() && (\r\n            <>\r\n              <li className=\"nav-item\">\r\n                <Link className=\"navbar-brand\" to=\"/Login\">\r\n                  Login\r\n                </Link>\r\n              </li>\r\n\r\n              <li className=\"nav-item\">\r\n                <Link className=\"navbar-brand\" to=\"/Signup\">\r\n                  Signup\r\n                </Link>\r\n              </li>\r\n            </>\r\n          )}\r\n        </ul>\r\n      </div>\r\n    </nav>\r\n  );\r\n}\r\n\r\nexport default NavTabs;\r\n","import React from \"react\";\r\nimport \"../assets/Footer.css\";\r\n\r\nfunction Footer() {\r\n  return (\r\n    <div className=\"footer\">\r\n      <a href=\"http://www.github.com\">&copy; Copyright TandemFandom 2022</a>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Footer;","import React from \"react\";\r\nimport \"./App.css\";\r\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\r\n\r\nimport Landing from \"./components/pages/Landing\";\r\nimport Main from \"./components/pages/Main\";\r\nimport Login from \"./components/pages/Login\";\r\nimport Signup from \"./components/pages/Signup\";\r\nimport Matches from \"./components/pages/Matches\";\r\n// import YourMatches from \"./components/pages/YourMatches\"\r\nimport Profile from \"./components/pages/Profile\";\r\nimport Header from \"./components/layout/NavTabs\";\r\nimport Footer from \"./components/layout/Footer\";\r\n\r\nimport {\r\n  ApolloClient,\r\n  InMemoryCache,\r\n  ApolloProvider,\r\n  createHttpLink,\r\n} from \"@apollo/client\";\r\nimport { setContext } from \"@apollo/client/link/context\";\r\n\r\n// Construct our main GraphQL API endpoint\r\nconst httpLink = createHttpLink({\r\n  uri: \"/graphql\",\r\n});\r\n\r\n// Construct request middleware that will attach the JWT token to every request as an `authorization` header\r\nconst authLink = setContext((_, { headers }) => {\r\n  // get the authentication token from local storage if it exists\r\n  const token = localStorage.getItem(\"id_token\");\r\n  // return the headers to the context so httpLink can read them\r\n  return {\r\n    headers: {\r\n      ...headers,\r\n      authorization: token ? `Bearer ${token}` : \"\",\r\n    },\r\n  };\r\n});\r\n\r\nconst client = new ApolloClient({\r\n  // Set up our client to execute the `authLink` middleware prior to making the request to our GraphQL API\r\n  link: authLink.concat(httpLink),\r\n  cache: new InMemoryCache(),\r\n});\r\n\r\nfunction App() {\r\n  return (\r\n    <ApolloProvider client={client}>\r\n      <Router>\r\n        <div\r\n          className=\"flex-column justify-flex-start min-100-vh\"\r\n          style={{\r\n            backgroundColor: \"#e6f0ef\",\r\n          }}\r\n        >\r\n          <Header />\r\n          <div className=\"container\">\r\n            <Route exact path=\"/\">\r\n              <Landing />\r\n            </Route>\r\n\r\n            <Route exact path=\"/main\">\r\n              <Main />\r\n            </Route>\r\n\r\n            <Route exact path=\"/profile\">\r\n              <Profile />\r\n            </Route>\r\n\r\n            <Route exact path=\"/matches\">\r\n              <Matches />\r\n            </Route>\r\n\r\n            {/* <Route exact path=\"/yourmatches\">\r\n              <YourMatches />\r\n            </Route> */}\r\n\r\n            <Route exact path=\"/login\">\r\n              <Login />\r\n            </Route>\r\n            \r\n\r\n            <Route exact path=\"/signup\">\r\n              <Signup />\r\n            </Route>\r\n          </div>\r\n          <Footer />\r\n        </div>\r\n      </Router>\r\n    </ApolloProvider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n","module.exports = __webpack_public_path__ + \"static/media/TFLogo.757cca1f.svg\";"],"sourceRoot":""}