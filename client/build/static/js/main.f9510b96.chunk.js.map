{"version":3,"sources":["components/images/Slider1.png","components/images/Slider2.png","components/images/Slider3.png","components/images/Slider4.png","components/images/Slider5.png","components/layout/Carousel.js","components/pages/Landing.js","components/pages/Main.js","utils/mutations.js","utils/auth.js","components/pages/Login.js","components/pages/Signup.js","components/MatchesList.js","utils/queries.js","components/pages/Matches.js","components/pages/Profile.js","components/layout/NavTabs.js","components/layout/Footer.js","App.js","reportWebVitals.js","index.js","components/images/TFLogo.svg"],"names":["module","exports","CarouselComponent","Carousel","fade","Item","className","src","require","alt","Caption","SmoothScroll","speed","speedAsDuration","Landing","id","href","Main","LOGIN_USER","gql","ADD_USER","ADD_FANDOM","ADD_MATCH","decode","this","getToken","token","isTokenExpired","exp","Date","now","err","localStorage","getItem","idToken","setItem","window","location","replace","removeItem","assign","Login","props","useState","email","password","formState","setFormState","useMutation","login","error","data","handleChange","event","target","name","value","handleFormSubmit","a","preventDefault","variables","Auth","console","class","logo","width","onSubmit","placeholder","type","onChange","style","cursor","message","Signup","username","firstName","lastName","userFormData","setUserFormData","addUser","validated","showAlert","setShowAlert","handleInputChange","currentTarget","checkValidity","stopPropagation","Form","noValidate","Alert","dismissible","onClose","show","variant","Group","Label","htmlFor","Control","required","Feedback","Button","disabled","MatchesList","users","me","log","unMatches","setUnMatches","matches","addMatch","handleClick","matchId","loggedIn","_id","filter","match","JSON","parse","stringify","useEffect","notMeUsers","user","meMatches","map","unmatchedUsers","index","undefined","loadMatches","key","image","onClick","fandoms","fandom","to","GET_ME","GET_USERS","GET_FANDOMS","Matches","useQuery","loading","loadingMe","dataMe","Profile","uploadedImages","setUploadedImages","pdata","load","profile","userData","Object","keys","length","apiKey","onSuccess","url","action","description","autoComplete","NavTabs","data-toggle","data-target","aria-controls","aria-expanded","aria-label","auth","logout","Footer","httpLink","createHttpLink","uri","authLink","setContext","_","headers","authorization","client","ApolloClient","link","concat","cache","InMemoryCache","App","ApolloProvider","backgroundColor","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f9510b96.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Slider1.4a82d53e.png\";","module.exports = __webpack_public_path__ + \"static/media/Slider2.403cd0dc.png\";","module.exports = __webpack_public_path__ + \"static/media/Slider3.9851f9a0.png\";","module.exports = __webpack_public_path__ + \"static/media/Slider4.147ce1e8.png\";","module.exports = __webpack_public_path__ + \"static/media/Slider5.a3b93476.png\";","import { Carousel } from 'react-bootstrap';\nimport React from 'react';\nimport '../assets/Carousel.css';\n\nfunction CarouselComponent() {\n    return (\n  <><Carousel fade>\n        <Carousel.Item>\n          <img\n            className=\"d-block w-100\"\n            src={require(\"./../images/Slider1.png\")}\n            alt=\"First slide\" />\n          <Carousel.Caption>\n            <h3>Convention Retention</h3>\n            <p>Meet your matches at local conventions</p>\n          </Carousel.Caption>\n        </Carousel.Item>\n\n        <Carousel.Item>\n          <img\n            className=\"d-block w-100\"\n            src={require(\"./../images/Slider2.png\")}\n            alt=\"Second slide\" />\n          <Carousel.Caption>\n            <h3>LLLCoolJ</h3>\n            <p>Larping Ladies Love Cool Jedi</p>\n          </Carousel.Caption>\n        </Carousel.Item>\n\n        <Carousel.Item>\n          <img\n            className=\"d-block w-100\"\n            src={require(\"./../images/Slider3.png\")}\n            alt=\"Third slide\" />\n          <Carousel.Caption>\n            <h3>Stormtrooper Bloopers</h3>\n            <p>\"I hit him\", said no Stormtrooper ever</p>\n          </Carousel.Caption>\n        </Carousel.Item>\n\n        <Carousel.Item>\n          <img\n            className=\"d-block w-100\"\n            src={require(\"./../images/Slider4.png\")}\n            alt=\"Fourth slide\" />\n          <Carousel.Caption>\n            <h3>Maintain a safe distance</h3>\n            <p>Socially distant swordfighting</p>\n          </Carousel.Caption>\n        </Carousel.Item>\n\n        <Carousel.Item>\n          <img\n            className=\"d-block w-100\"\n            src={require(\"./../images/Slider5.png\")}\n            alt=\"Fifth slide\" />\n          <Carousel.Caption>\n            <h3>Difference between war and peace</h3>\n            <p>The couple that fights together, stays together</p>\n          </Carousel.Caption>\n        </Carousel.Item>\n\n        </Carousel>\n        </>\n    )\n};\nexport default CarouselComponent;\n","import React from \"react\";\nimport \"./../assets/Landing.css\";\nimport SmoothScroll from \"smooth-scroll\";\nimport Carousel from \"./../layout/Carousel\";\n\nexport const scroll = new SmoothScroll('a[href*=\"#\"]', {\n  speed: 1000,\n  speedAsDuration: true,\n});\n\nexport default function Landing() {\n  return (\n    <>\n      <header id='header'>\n        <div className='intro'>\n          <div className='overlay'>\n            <div className='container'>\n              <div className='row'>\n                <div className='col-md-12 intro-text'>\n                 <a\n                    href='/Signup'\n                    className='btn btn-custom btn-lg'\n                  >\n                    Sign Up\n                  </a>{' '}\n                  <a\n                    href='/Login'\n                    className='btn btn-custom btn-lg'\n                  >\n                    Login\n                  </a>{' '}\n                  <p>Tandem Fandom is THE people finding app for the Who's Whovian of your favorite fandoms!</p>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </header>\n          <div id='features' className='text-center'>\n          <div className='container'>\n            {/* <div className='col-md-10 col-md-offset-1 section-title'> */}<div className='section-title'>\n              <h2>Features</h2>\n            </div>\n            <div className=''>\n              <Carousel/>\n            </div>\n          </div>\n        </div>\n        </>\n    )\n}\n","import React from 'react';\n\nexport default function Main() {\n  return (\n    <div>\n      <h1>Welcome to TandemFandom!</h1>\n      <p>\n        STUFF\n      </p>\n    </div>\n  );\n}\n","import { gql } from '@apollo/client';\n\nexport const LOGIN_USER = gql`\n    mutation login($email: String!, $password: String!) {\n        login( email: $email, password: $password) {\n            token\n            user {\n                _id\n                username\n            }\n        }\n    }\n`;\n\nexport const ADD_USER = gql`\n    mutation addUser($username: String!, $email: String!, $password: String!, $firstName: String!, $lastName: String!) {\n        addUser(username: $username, email: $email, password: $password, firstName: $firstName, lastName: $lastName) {\n            token\n            user {\n                username \n                email \n                _id\n            }\n        }\n    }\n`;\n\nexport const ADD_FANDOM = gql`\n    mutation addFandom($_id: ID!, $fandomId: ID! ) {\n        addFandom(_id: $_id, fandomId: $fandomId) {\n            username\n            fandoms {\n                _id\n                name\n                description\n            }\n        }\n    }\n`;\n\nexport const REMOVE_FANDOM = gql`\n    mutation removeFandom($_id: ID!, $fandomId: ID! ) {\n        removeFandom(_id: $_id, fandomId: $fandomId) {\n            fandoms {\n                _id\n                name\n                description\n            }\n        }\n    }\n`;\n\nexport const ADD_MATCH = gql`\n    mutation addMatch( $_id: ID! ) {\n        addMatch( _id: $_id) {\n            _id\n            username\n            firstName\n            lastName\n            matches {\n                _id\n                username\n                firstName\n                lastName\n            }\n            fandoms {\n                _id\n                name\n                description\n            }\n        }\n    }\n`;\nexport const REMOVE_MATCH = gql`\n    mutation removeMatch($_id: ID!, $userId: ID! ) {\n        removeMatch(_id: $_id, userId: $userId) {\n            _id\n            username\n            firstName\n            lastName\n            matches {\n                _id\n                username\n                firstName\n                lastName\n            }\n        }\n    }\n`;","// use this to decode a token and get the user's information out of it\nimport decode from 'jwt-decode';\n\n// create a new class to instantiate for a user\nclass AuthService {\n  // get user data\n  getProfile() {\n    return decode(this.getToken());\n  }\n\n  // check if user's logged in\n  loggedIn() {\n    // Checks if there is a saved token and it's still valid\n    const token = this.getToken();\n    return !!token && !this.isTokenExpired(token); // handwaiving here\n  }\n\n  // check if token is expired\n  isTokenExpired(token) {\n    try {\n      const decoded = decode(token);\n      if (decoded.exp < Date.now() / 1000) {\n        return true;\n      } else return false;\n    } catch (err) {\n      return false;\n    }\n  }\n\n  getToken() {\n    // Retrieves the user token from localStorage\n    return localStorage.getItem('id_token');\n  }\n\n  login(idToken) {\n    // Saves user token to localStorage\n    localStorage.setItem('id_token', idToken);\n    // window.location.assign('/Profile');\n    window.location.replace('/Profile');\n  }\n\n  logout() {\n    // Clear user token and profile data from localStorage\n    localStorage.removeItem('id_token');\n    // this will reload the page and reset the state of the application\n    window.location.assign('/');\n  }\n}\n\nexport default new AuthService();\n","import React, { useState } from 'react';\nimport { BrowserRouter, Link } from 'react-router-dom';\nimport { useMutation } from '@apollo/client';\nimport { LOGIN_USER } from '../../utils/mutations';\nimport logo from '../images/TFLogo.svg';\n\nimport Auth from '../../utils/auth';\n\nconst Login = (props) => {\n  const [formState, setFormState] = useState({ email: '', password: '' });\n  const [login, { error, data }] = useMutation(LOGIN_USER);\n\n  // update state based on form input changes\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n\n    setFormState({\n      ...formState,\n      [name]: value,\n    });\n  };\n\n  // submit form\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n    try {\n      const { data } = await login({\n        variables: { ...formState },\n      });\n\n      Auth.login(data.login.token);\n    } catch (e) {\n      console.error(e);\n    }\n\n    // clear form values\n    setFormState({\n      email: '',\n      password: '',\n    });\n  };\n\n  return (\n    <>\n       <div class=\"text-center\">\n    <img src={logo} width=\"300\" alt=\"Tandem Fandom\" />\n</div>\n    \n     <hr></hr>\n    <main className=\"flex-row justify-center mb-4\">\n      <div className=\"col-12 col-lg-10\">\n        <div className=\"card\">\n          <h4 className=\"card-header bg-dark text-light p-2\">Login</h4>\n          <div className=\"card-body\">\n            {data ? (\n              <p>\n                Success!\n              </p>\n            ) : (\n              <form onSubmit={handleFormSubmit}>\n                <input\n                  className=\"form-input m-2\"\n                  placeholder=\"Your email\"\n                  name=\"email\"\n                  type=\"email\"\n                  value={formState.email}\n                  onChange={handleChange}\n                />\n                <input\n                  className=\"form-input m-2\"\n                  placeholder=\"Password\"\n                  name=\"password\"\n                  type=\"password\"\n                  value={formState.password}\n                  onChange={handleChange}\n                />\n                <button\n                  className=\"btn btn-block btn-info m-2\"\n                  style={{ cursor: 'pointer' }}\n                  type=\"submit\"\n                >\n                  Submit\n                </button>\n              </form>\n            )}\n\n            {error && (\n              <div className=\"my-3 p-3 bg-danger text-white\">\n                {error.message}\n              </div>\n            )}\n          </div>\n        </div>\n      </div>\n    </main>\n    </>\n  );\n};\n\nexport default Login;\n","import React, { useState } from 'react';\nimport { Form, Button, Alert } from 'react-bootstrap';\nimport { useMutation} from '@apollo/client';\nimport logo from '../images/TFLogo.svg';\n\nimport Auth from '../../utils/auth';\nimport { ADD_USER } from '../../utils/mutations';\n\n\nconst Signup = () => {\n  // set initial form state\n  const [userFormData, setUserFormData] = useState({ username: '', email: '', password: '' , firstName: '', lastName: ''});\n\n  const [addUser] = useMutation(ADD_USER);\n  // set state for form validation\n  const [validated] = useState(false);\n  // set state for alert\n  const [showAlert, setShowAlert] = useState(false);\n\n  const handleInputChange = (event) => {\n    const { name, value } = event.target;\n    setUserFormData({ ...userFormData, [name]: value });\n  };\n\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n\n    // check if form has everything (as per react-bootstrap docs)\n    const form = event.currentTarget;\n    if (form.checkValidity() === false) {\n      event.preventDefault();\n      event.stopPropagation();\n    }\n\n    try {\n      const { data } = await addUser({\n        variables: { ...userFormData },\n      });\n\n      \n      Auth.login(data.addUser.token);\n    } catch (err) {\n      console.error(err);\n      setShowAlert(true);\n    }\n\n    setUserFormData({\n      username: '',\n      email: '',\n      password: '',\n    });\n  };\n\n  return (\n    <>\n    <div class=\"text-center\">\n    <img src={logo} width=\"300\" alt=\"Tandem Fandom\" />\n</div>\n    \n     <hr></hr>\n      {/* This is needed for the validation functionality above */}\n      <Form noValidate validated={validated} onSubmit={handleFormSubmit}>\n        {/* show alert if server response is bad */}\n        <Alert dismissible onClose={() => setShowAlert(false)} show={showAlert} variant='danger'>\n          Something went wrong with your signup!\n        </Alert>\n\n        <Form.Group>\n          <Form.Label htmlFor='firstName'>First Name</Form.Label>\n          <Form.Control\n            type='text'\n            placeholder='First Name'\n            name='firstName'\n            onChange={handleInputChange}\n            value={userFormData.firstName}\n            required\n          />\n          <Form.Control.Feedback type='invalid'>First Name is required!</Form.Control.Feedback>\n        </Form.Group>\n        <Form.Group>\n          <Form.Label htmlFor='firstName'>Last Name</Form.Label>\n          <Form.Control\n            type='text'\n            placeholder='Last Name'\n            name='lastName'\n            onChange={handleInputChange}\n            value={userFormData.lastName}\n            required\n          />\n          <Form.Control.Feedback type='invalid'>Last Name is required!</Form.Control.Feedback>\n        </Form.Group>\n        <Form.Group>\n          <Form.Label htmlFor='username'>Username</Form.Label>\n          <Form.Control\n            type='text'\n            placeholder='Your username'\n            name='username'\n            onChange={handleInputChange}\n            value={userFormData.username}\n            required\n          />\n          <Form.Control.Feedback type='invalid'>Username is required!</Form.Control.Feedback>\n        </Form.Group>\n\n        <Form.Group>\n          <Form.Label htmlFor='email'>Email</Form.Label>\n          <Form.Control\n            type='email'\n            placeholder='Your email address'\n            name='email'\n            onChange={handleInputChange}\n            value={userFormData.email}\n            required\n          />\n          <Form.Control.Feedback type='invalid'>Email is required!</Form.Control.Feedback>\n        </Form.Group>\n\n        <Form.Group>\n          <Form.Label htmlFor='password'>Password</Form.Label>\n          <Form.Control\n            type='password'\n            placeholder='Your password'\n            name='password'\n            onChange={handleInputChange}\n            value={userFormData.password}\n            required\n          />\n          <Form.Control.Feedback type='invalid'>Password is required!</Form.Control.Feedback>\n        </Form.Group>\n        \n        <Button\n          disabled={!(userFormData.username && userFormData.email && userFormData.password)}\n          type='submit'\n          variant='success'>\n          Submit\n        </Button>\n      </Form>\n    </>\n  );\n};\n\nexport default Signup;","import React, { useContext, useEffect, useState } from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport { useMutation } from \"@apollo/client\";\nimport Auth from \"../utils/auth\";\n\nimport { ADD_MATCH } from \"../utils/mutations\";\n\nexport default function MatchesList({ users, me }) {\n  console.log({ users }, { me });\n  const [unMatches, setUnMatches] = useState([]);\n  const [matches, setMatches] = useState(me.matches);\n  // const [matches, setMatches] = useState(me.matches);\n\n  const [addMatch, { error }] = useMutation(ADD_MATCH);\n\n  const handleClick = async (matchId) => {\n    const token = Auth.loggedIn() ? Auth.getToken() : null;\n\n    if (!token) {\n      return false;\n    }\n\n    try {\n      const { data } = await addMatch({\n        variables: { _id: matchId },\n      });\n\n      setUnMatches([...unMatches.filter((match) => match._id !== matchId)]);\n\n      Auth.login(data.users.token);\n    } catch (err) {\n      console.error(JSON.parse(JSON.stringify(err)));\n    }\n  };\n\n  useEffect(() => {\n    loadMatches();\n  }, []);\n  // const unmatchedUsers = users.filter(user => me.matches.map((match, index) => user._id !== match._id ))\n  // console.log(unmatchedUsers)\n  function loadMatches() {\n    const notMeUsers = users.filter((user) => user._id !== me._id);\n    console.log(notMeUsers);\n    const meMatches = me.matches.map((match) => match._id);\n    console.log(meMatches);\n    // let unmatchedUsers;\n    const unmatchedUsers = notMeUsers.filter((user, index) => {\n      console.log(meMatches[index]);\n      if (meMatches[index] === undefined) {\n        return true;\n      } else {\n        return false;\n      }\n\n      // const banana = me.matches.map((match) => {\n      //   console.log(index);\n      // });\n      // console.log(banana);\n    });\n    setUnMatches(unmatchedUsers);\n  }\n  // for (let index = 0; index < meMatches.length; index++) {\n  //   const matchId = meMatches[index];\n  //   if (matchId) {\n\n  //   }\n  // }\n  // console.log(unmatchedUsers);\n\n  if (!Auth.loggedIn()) {\n    return <Redirect to=\"/login\" />\n  };\n\n  return (\n    <div>\n      <h1>Matches</h1>\n      <div className=\"row\">\n        {matches.map((user, index) => {\n          return (\n            <div className=\"col my-4\" key={user._id}>\n              <div className=\"card\" style={{ width: `18rem` }}>\n                <img\n                  className=\"card-img-top\"\n                  src={`${user.image}`}\n                  alt=\"users profile\"\n                />\n                <div className=\"card-body\">\n                  <h5 className=\"card-title text-center\">\n                    {user.firstName} {user.lastName}\n                  </h5>\n                  <h6 className=\"card-text\">Fandoms:</h6>\n                  {/* {user.matches.fandoms.map((fandom) => {\n                    return (\n                      <p className=\"card-text\" key={fandom._id}>\n                        {fandom.name}\n                      </p>\n                    );\n                  })} */}\n                  <div className=\"text-center\">\n                    <button\n                      className=\"btn-block btn-success\"\n                      type=\"button\"\n                      onClick={() => handleClick(user._id)}\n                    >\n                      Add Match\n                    </button>\n                  </div>\n                </div>\n              </div>\n            </div>\n          );\n        })}\n      </div>\n      <h1>UnMatches</h1>\n      <div className=\"row\">\n        {unMatches.map((user, index) => {\n          return (\n            <div className=\"col my-4\" key={user._id}>\n              <div className=\"card\" style={{ width: `18rem` }}>\n                <img\n                  className=\"card-img-top\"\n                  src={`${user.image}`}\n                  alt=\"users profile\"\n                />\n                <div className=\"card-body\">\n                  <h5 className=\"card-title text-center\">\n                    {user.firstName} {user.lastName}\n                  </h5>\n                  <h6 className=\"card-text\">Fandoms:</h6>\n                  {user.fandoms.map((fandom) => {\n                    return (\n                      <p className=\"card-text\" key={fandom._id}>\n                        {fandom.name}\n                      </p>\n                    );\n                  })}\n                  <div className=\"text-center\">\n                    <button\n                      className=\"btn-block btn-success\"\n                      type=\"button\"\n                      onClick={() => handleClick(user._id)}\n                    >\n                      Add Match\n                    </button>\n                  </div>\n                </div>\n              </div>\n            </div>\n          );\n        })}\n      </div>\n    </div>\n  );\n}\n","import { gql } from '@apollo/client';\n\nexport const GET_ME = gql`\n    query me {\n        me {\n            _id\n            username\n            email\n            firstName\n            lastName\n            matches {\n                _id\n                username\n                email\n                firstName\n                lastName\n            }\n            fandoms {\n                _id\n                description\n                name\n            }\n        }\n    }\n`;\n\nexport const GET_USERS = gql`\n    query users {\n        users {\n            _id\n            username\n            firstName\n            lastName\n            image\n            fandoms {\n                _id\n                description\n                name\n            }\n        }\n    }\n`;\n\nexport const GET_FANDOMS = gql`\n    query fandoms {\n        fandoms {\n            _id\n            name\n            description\n            image\n        }\n    }\n`;\n","import React, { useState } from \"react\";\nimport { useQuery } from \"@apollo/client\";\nimport MatchesList from \"../MatchesList\";\n\nimport { GET_USERS } from \"../../utils/queries\";\nimport { GET_ME } from \"../../utils/queries\";\n\nexport default function Matches() {\n  const { loading, data } = useQuery(GET_USERS);\n  const users = data?.users || [];\n\n  const { loading: loadingMe, data: dataMe } = useQuery(GET_ME);\n  const me = dataMe?.me || {};\n  console.log({ users }, { me });\n\n  return (\n    <div>\n      {loadingMe ? (\n        <div>Loading...</div>\n      ) : (\n        <MatchesList users={users} me={me} />\n      )}\n    </div>\n  );\n}\n","import React, { useState } from \"react\";\nimport { useMutation, useQuery } from \"@apollo/client\";\nimport Auth from \"../../utils/auth\";\nimport \"./../assets/Profile.css\";\nimport ImageUploading from \"react-images-uploading\";\nimport ReactDom from \"react-dom\";\nimport SimpleFileUpload from 'react-simple-file-upload'\n\nimport { GET_ME } from \"../../utils/queries\";\nimport { GET_FANDOMS } from \"../../utils/queries\";\nimport { ADD_FANDOM } from \"../../utils/mutations\";\n\nexport default function Profile() {\n  // Daniel's edits\n  const [uploadedImages, setUploadedImages] = useState([])\n\n  function handleFile(url) {\n    setUploadedImages([...uploadedImages, url])\n    console.log('The URL of the file is ' + url)\n  }\n  \n  // Jose's edits\n  const { load, pdata } = useQuery(GET_ME);\n  const profile = pdata?.me || {};\n\n  const { loading, data } = useQuery(GET_FANDOMS);\n  const fandoms = data?.fandoms || [];\n\n  const [userData, setUserData] = useState({});\n  const [checked, setChecked] = useState({});\n\n  // function toggle(index) {\n  //   const newData = [...userData];\n  //   newData.splice(index, 1, {\n  //     label: data[index].label,\n  //     checked: !data[index].checked\n  //   });\n  //   setData(newData);\n  //   onChange(newData.filter(x => x.checked));\n  // };\n\n//   handleInputChange({ target }) ;{\n//     const value = target.type === 'checkbox' ? target.checked : target.value;\n//     this.setState({ [target.name]: value });\n// }\n\n  const userDataLength = Object.keys(userData).length;\n\n  const [updatedUser, { error }] = useMutation(ADD_FANDOM);\n  const handleAddFandom = async (fandomId) => {\n    const token = Auth.loggedIn() ? Auth.getToken() : null;\n\n    if (!token) {\n      return false;\n    }\n\n    try {\n      const { data } = await updatedUser({\n        variables: { ...userData },\n      });\n\n      setUserData(updatedUser);\n      // upon success, remove book's id from localStorage\n      // need to make in local storage js in utils\n      // addFandom(fandomId);\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  return (\n    <div>\n      <div>\n        <h1>Profile Page</h1>\n        <p>Profile Page goes here</p>\n      \n        <SimpleFileUpload\n          apiKey=\"a576e70cb4dce38730545ffcbe16a477\"\n          onSuccess={handleFile}\n        />\n\n      </div>\n      <div className='upload-wrapper'>\n        <div className=\"img-landing\">\n          <ul className=\"image-grid\">\n            {uploadedImages.length ? (\n              uploadedImages.map((image, index) => (index === 0 &&\n                <li>\n                  <img className=\"img-fluid profile-img\" src={image} alt=\"profile images\" />\n                </li>\n              ))\n            ) : (\n              <p></p>\n            )}\n          </ul>\n        </div>\n      </div>\n      <div className=\"container\">\n        <h1>{`${profile.name}'s`} Profile Page</h1>\n        <div className=\"container\">\n          <form action=\"\">\n            <div className=\"row\">\n              {fandoms.map((fandom, index) => {\n                return (\n                  <div className=\"card col-lg-4 col-md-6 col-sm-12\" style={{ width: `18rem` }} key={fandom._id}>\n                    <img\n                      className=\"card-img-top\"\n                      src={`${fandom.image}`}\n                      alt={`${fandom.name} logo`}\n                    />\n                    <div className=\"card-body\">\n                      <h5 className=\"card-title text-center\">{fandom.name}</h5>\n                      <p className=\"card-text\">{fandom.description}</p>\n                      <div className=\"text-center\">\n                        <input\n                          type=\"checkbox\"\n                          value={`${fandom._id}`}\n                          className=\"btn-check\"\n                          id=\"btn-check-outlined\"\n                          autoComplete=\"off\"\n                        // onChange={toggle}\n                        />\n                        <label\n                          id=\"label\"\n                          className=\"btn btn-outline-primary\"\n                          htmlFor=\"btn-check-outlined\"\n                        >\n                          Add\n                        </label>\n                        <br></br>\n                      </div>\n                    </div>\n                  </div>\n                );\n              })}\n            </div>\n          </form>\n        </div>\n      </div>\n    </div>\n  );\n}\n","import React from \"react\";\n\nimport { Link } from \"react-router-dom\";\nimport \"../assets/Nav.css\";\nimport logo from \"../images/TFLogo.svg\";\n\nimport auth from \"../../utils/auth\";\n\nfunction NavTabs() {\n  return (\n    <nav className=\"navbar navbar-expand-lg navbar-light py-3\">\n      <a className=\"navbar-brand\" href=\"#\">\n        <img src={logo} width=\"125\" alt=\"Tandem Fandom\" />\n      </a>\n      <button\n        className=\"navbar-toggler\"\n        type=\"button\"\n        data-toggle=\"collapse\"\n        data-target=\"#navbarNav\"\n        aria-controls=\"navbarNav\"\n        aria-expanded=\"false\"\n        aria-label=\"Toggle navigation\"\n      >\n        <span className=\"navbar-toggler-icon\"></span>\n      </button>\n\n      <div className=\"collapse navbar-collapse\" id=\"navbarNav\">\n        <ul className=\"navbar-nav mr-auto\">\n          {auth.loggedIn() && (\n            <>\n              <li className=\"nav-item\">\n                <Link className=\"navbar-brand\" to=\"/Profile\">\n                  Profile\n                </Link>\n              </li>\n              <li className=\"nav-item\">\n                <Link className=\"navbar-brand\" to=\"/Matches\">\n                  Matches\n                </Link>\n              </li>\n              <li className=\"nav-item\">\n                <Link className=\"navbar-brand nav-link\" onClick={auth.logout()} to=\"/\">\n                  Logout\n                </Link>\n              </li>\n            </>\n          )}\n          {!auth.loggedIn() && (\n            <>\n              <li className=\"nav-item\">\n                <Link className=\"navbar-brand\" to=\"/Login\">\n                  Login\n                </Link>\n              </li>\n\n              <li className=\"nav-item\">\n                <Link className=\"navbar-brand\" to=\"/Signup\">\n                  Signup\n                </Link>\n              </li>\n            </>\n          )}\n        </ul>\n      </div>\n    </nav>\n  );\n}\n\nexport default NavTabs;\n","import React from \"react\";\nimport \"../assets/Footer.css\";\n\nfunction Footer() {\n  return (\n    <div className=\"footer\">\n      <a href=\"http://www.github.com\">&copy; Copyright TandemFandom 2022</a>\n    </div>\n  );\n}\n\nexport default Footer;","import React from \"react\";\nimport \"./App.css\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\n\nimport Landing from \"./components/pages/Landing\";\nimport Main from \"./components/pages/Main\";\nimport Login from \"./components/pages/Login\";\nimport Signup from \"./components/pages/Signup\";\nimport Matches from \"./components/pages/Matches\";\n// import YourMatches from \"./components/pages/YourMatches\"\nimport Profile from \"./components/pages/Profile\";\nimport Header from \"./components/layout/NavTabs\";\nimport Footer from \"./components/layout/Footer\";\n\nimport {\n  ApolloClient,\n  InMemoryCache,\n  ApolloProvider,\n  createHttpLink,\n} from \"@apollo/client\";\nimport { setContext } from \"@apollo/client/link/context\";\n\n// Construct our main GraphQL API endpoint\nconst httpLink = createHttpLink({\n  uri: \"/graphql\",\n});\n\n// Construct request middleware that will attach the JWT token to every request as an `authorization` header\nconst authLink = setContext((_, { headers }) => {\n  // get the authentication token from local storage if it exists\n  const token = localStorage.getItem(\"id_token\");\n  // return the headers to the context so httpLink can read them\n  return {\n    headers: {\n      ...headers,\n      authorization: token ? `Bearer ${token}` : \"\",\n    },\n  };\n});\n\nconst client = new ApolloClient({\n  // Set up our client to execute the `authLink` middleware prior to making the request to our GraphQL API\n  link: authLink.concat(httpLink),\n  cache: new InMemoryCache(),\n});\n\nfunction App() {\n  return (\n    <ApolloProvider client={client}>\n      <Router>\n        <div\n          className=\"flex-column justify-flex-start min-100-vh\"\n          style={{\n            backgroundColor: \"#e6f0ef\",\n          }}\n        >\n          <Header />\n          <div className=\"container\">\n            <Route exact path=\"/\">\n              <Landing />\n            </Route>\n\n            <Route exact path=\"/main\">\n              <Main />\n            </Route>\n\n            <Route exact path=\"/profile\">\n              <Profile />\n            </Route>\n\n            <Route exact path=\"/matches\">\n              <Matches />\n            </Route>\n\n            {/* <Route exact path=\"/yourmatches\">\n              <YourMatches />\n            </Route> */}\n\n            <Route exact path=\"/login\">\n              <Login />\n            </Route>\n            \n\n            <Route exact path=\"/signup\">\n              <Signup />\n            </Route>\n          </div>\n          <Footer />\n        </div>\n      </Router>\n    </ApolloProvider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","module.exports = __webpack_public_path__ + \"static/media/TFLogo.6cc8101f.svg\";"],"sourceRoot":""}