{"version":3,"sources":["components/images/Slider1.png","components/images/Slider2.png","components/images/Slider3.png","components/images/Slider4.png","components/images/Slider5.png","components/layout/Carousel.js","components/pages/Landing.js","components/pages/Main.js","utils/mutations.js","utils/auth.js","components/pages/Login.js","components/pages/Signup.js","utils/queries.js","components/pages/Matches.js","components/pages/Profile.js","components/layout/NavTabs.js","components/layout/Footer.js","App.js","reportWebVitals.js","index.js","components/images/TFLogo_white.svg","components/images/TFLogo.svg"],"names":["module","exports","CarouselComponent","fade","Item","className","src","require","alt","Caption","SmoothScroll","speed","speedAsDuration","Landing","id","logo","width","href","Main","LOGIN_USER","gql","ADD_USER","ADD_FANDOM","ADD_MATCH","decode","this","getToken","token","isTokenExpired","exp","Date","now","err","localStorage","getItem","idToken","setItem","window","location","assign","removeItem","Login","props","useState","email","password","formState","setFormState","useMutation","login","error","data","handleChange","event","target","name","value","handleFormSubmit","a","preventDefault","variables","Auth","console","onSubmit","placeholder","type","onChange","style","cursor","message","Signup","username","firstName","lastName","userFormData","setUserFormData","addUser","validated","showAlert","setShowAlert","handleInputChange","currentTarget","checkValidity","stopPropagation","Form","noValidate","Alert","dismissible","onClose","show","variant","Group","Label","htmlFor","Control","required","Feedback","Button","disabled","GET_ME","GET_USERS","GET_FANDOMS","Matches","useQuery","loading","users","addMatch","userData","setUserData","handleAddMatch","userId","userToSave","find","_id","loggedIn","map","user","index","key","image","fandoms","fandom","onClick","Profile","uploadedImages","setUploadedImages","pdata","load","profile","me","Object","keys","length","apiKey","onSuccess","url","log","action","description","autoComplete","NavTabs","data-toggle","data-target","aria-controls","aria-expanded","aria-label","to","Footer","httpLink","createHttpLink","uri","authLink","setContext","_","headers","authorization","client","ApolloClient","link","concat","cache","InMemoryCache","App","ApolloProvider","backgroundColor","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.450a9f77.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Slider1.4a82d53e.png\";","module.exports = __webpack_public_path__ + \"static/media/Slider2.403cd0dc.png\";","module.exports = __webpack_public_path__ + \"static/media/Slider3.9851f9a0.png\";","module.exports = __webpack_public_path__ + \"static/media/Slider4.147ce1e8.png\";","module.exports = __webpack_public_path__ + \"static/media/Slider5.a3b93476.png\";","import { Carousel } from 'bootstrap';\nimport React from 'react';\nimport '../assets/Carousel.css';\n\nfunction CarouselComponent() {\n    return (\n  <><Carousel fade>\n        <Carousel.Item>\n          <img\n            className=\"d-block w-100\"\n            src={require(\"./../images/Slider1.png\")}\n            alt=\"First slide\" />\n          <Carousel.Caption>\n            <h3>First slide label</h3>\n            <p>Nulla vitae elit libero, a pharetra augue mollis interdum.</p>\n          </Carousel.Caption>\n        </Carousel.Item>\n\n        <Carousel.Item>\n          <img\n            className=\"d-block w-100\"\n            src={require(\"./../images/Slider2.png\")}\n            alt=\"Second slide\" />\n          <Carousel.Caption>\n            <h3>Second slide label</h3>\n            <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit.</p>\n          </Carousel.Caption>\n        </Carousel.Item>\n\n        <Carousel.Item>\n          <img\n            className=\"d-block w-100\"\n            src={require(\"./../images/Slider3.png\")}\n            alt=\"Third slide\" />\n          <Carousel.Caption>\n            <h3>Third slide label</h3>\n            <p>Praesent commodo cursus magna, vel scelerisque nisl consectetur.</p>\n          </Carousel.Caption>\n        </Carousel.Item>\n\n        <Carousel.Item>\n          <img\n            className=\"d-block w-100\"\n            src={require(\"./../images/Slider4.png\")}\n            alt=\"Fourth slide\" />\n          <Carousel.Caption>\n            <h3>Fourth slide label</h3>\n            <p>Praesent commodo cursus magna, vel scelerisque nisl consectetur.</p>\n          </Carousel.Caption>\n        </Carousel.Item>\n\n        <Carousel.Item>\n          <img\n            className=\"d-block w-100\"\n            src={require(\"./../images/Slider5.png\")}\n            alt=\"Fifth slide\" />\n          <Carousel.Caption>\n            <h3>Fifth slide label</h3>\n            <p>Praesent commodo cursus magna, vel scelerisque nisl consectetur.</p>\n          </Carousel.Caption>\n        </Carousel.Item>\n\n        </Carousel>\n        </>\n    )\n};\nexport default CarouselComponent;\n","import React from \"react\";\nimport \"./../assets/Landing.css\";\nimport SmoothScroll from \"smooth-scroll\";\nimport logo from '../images/TFLogo_white.svg';\nimport CarouselComponent from \"../layout/Carousel\";\n\nexport const scroll = new SmoothScroll('a[href*=\"#\"]', {\n  speed: 1000,\n  speedAsDuration: true,\n});\n\nexport default function Landing() {\n  return (\n    <>\n      <header id='header'>\n        <div className='intro'>\n          <div className='overlay'>\n            <div className='container'>\n              <div className='row'>\n                <div className='col-md-12 intro-text'>\n                <img src={logo} alt=\"Tandem Fandom\" width=\"50%\"/>\n                  <p>Find your people! Tandem Fandom is THE people finding app for the Who's Whovian of your favorite fandoms!</p>\n                  <a\n                    href='/Signup'\n                    className='btn btn-custom btn-lg'\n                  >\n                    Sign Up\n                  </a>{' '}\n                  <a\n                    href='/Login'\n                    className='btn btn-custom btn-lg'\n                  >\n                    Login\n                  </a>{' '}\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </header>\n          <div id='features' className='text-center'>\n          <div className='container'>\n            <div className='col-md-10 col-md-offset-1 section-title'>\n              <h2>Features</h2>\n              <CarouselComponent />\n            </div>\n            <div className='row'>\n            </div>\n          </div>\n        </div>\n        </>\n    )\n}\n","import React from 'react';\n\nexport default function Main() {\n  return (\n    <div>\n      <h1>Welcome to TandemFandom!</h1>\n      <p>\n        STUFF\n      </p>\n    </div>\n  );\n}\n","import { gql } from '@apollo/client';\n\nexport const LOGIN_USER = gql`\n    mutation login($email: String!, $password: String!) {\n        login( email: $email, password: $password) {\n            token\n            user {\n                _id\n                username\n            }\n        }\n    }\n`;\n\nexport const ADD_USER = gql`\n    mutation addUser($username: String!, $email: String!,       $password: String!, $firstName: String!, $lastName: String!) {\n        addUser(username: $username, email: $email, password: $password, firstName: $firstName, lastName: $lastName) {\n            token\n            user {\n                username \n                email \n                _id\n            }\n        }\n    }\n`;\n\nexport const ADD_FANDOM = gql`\n    mutation addFandom($_id: ID!, $fandomId: ID! ) {\n        addFandom(_id: $_id, fandomId: $fandomId) {\n            username\n            fandoms {\n                _id\n                name\n                description\n            }\n        }\n    }\n`;\n\nexport const REMOVE_FANDOM = gql`\n    mutation removeFandom($_id: ID!, $fandomId: ID! ) {\n        removeFandom(_id: $_id, fandomId: $fandomId) {\n            fandoms {\n                _id\n                name\n                description\n            }\n        }\n    }\n`;\n\nexport const ADD_MATCH = gql`\n    mutation addMatch($_id: ID!, $userId: ID! ) {\n        addMatch(_id: $_id, userId: $userId) {\n            _id\n            username\n            firstName\n            lastName\n            matches {\n                _id\n                username\n                firstName\n                lastName\n            }\n        }\n    }\n`;\nexport const REMOVE_MATCH = gql`\n    mutation removeMatch($_id: ID!, $userId: ID! ) {\n        removeMatch(_id: $_id, userId: $userId) {\n            _id\n            username\n            firstName\n            lastName\n            matches {\n                _id\n                username\n                firstName\n                lastName\n            }\n        }\n    }\n`;","// use this to decode a token and get the user's information out of it\nimport decode from 'jwt-decode';\n\n// create a new class to instantiate for a user\nclass AuthService {\n  // get user data\n  getProfile() {\n    return decode(this.getToken());\n  }\n\n  // check if user's logged in\n  loggedIn() {\n    // Checks if there is a saved token and it's still valid\n    const token = this.getToken();\n    return !!token && !this.isTokenExpired(token); // handwaiving here\n  }\n\n  // check if token is expired\n  isTokenExpired(token) {\n    try {\n      const decoded = decode(token);\n      if (decoded.exp < Date.now() / 1000) {\n        return true;\n      } else return false;\n    } catch (err) {\n      return false;\n    }\n  }\n\n  getToken() {\n    // Retrieves the user token from localStorage\n    return localStorage.getItem('id_token');\n  }\n\n  login(idToken) {\n    // Saves user token to localStorage\n    localStorage.setItem('id_token', idToken);\n    window.location.assign('/');\n  }\n\n  logout() {\n    // Clear user token and profile data from localStorage\n    localStorage.removeItem('id_token');\n    // this will reload the page and reset the state of the application\n    window.location.assign('/');\n  }\n}\n\nexport default new AuthService();\n","import React, { useState } from 'react';\nimport { BrowserRouter, Link } from 'react-router-dom';\nimport { useMutation } from '@apollo/client';\nimport { LOGIN_USER } from '../../utils/mutations';\n\nimport Auth from '../../utils/auth';\n\nconst Login = (props) => {\n  const [formState, setFormState] = useState({ email: '', password: '' });\n  const [login, { error, data }] = useMutation(LOGIN_USER);\n\n  // update state based on form input changes\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n\n    setFormState({\n      ...formState,\n      [name]: value,\n    });\n  };\n\n  // submit form\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n    try {\n      const { data } = await login({\n        variables: { ...formState },\n      });\n\n      Auth.login(data.login.token);\n    } catch (e) {\n      console.error(e);\n    }\n\n    // clear form values\n    setFormState({\n      email: '',\n      password: '',\n    });\n  };\n\n  return (\n    <main className=\"flex-row justify-center mb-4\">\n      <div className=\"col-12 col-lg-10\">\n        <div className=\"card\">\n          <h4 className=\"card-header bg-dark text-light p-2\">Login</h4>\n          <div className=\"card-body\">\n            {data ? (\n              <p>\n                Success!\n              </p>\n            ) : (\n              <form onSubmit={handleFormSubmit}>\n                <input\n                  className=\"form-input\"\n                  placeholder=\"Your email\"\n                  name=\"email\"\n                  type=\"email\"\n                  value={formState.email}\n                  onChange={handleChange}\n                />\n                <input\n                  className=\"form-input\"\n                  placeholder=\"******\"\n                  name=\"password\"\n                  type=\"password\"\n                  value={formState.password}\n                  onChange={handleChange}\n                />\n                <button\n                  className=\"btn btn-block btn-info\"\n                  style={{ cursor: 'pointer' }}\n                  type=\"submit\"\n                >\n                  Submit\n                </button>\n              </form>\n            )}\n\n            {error && (\n              <div className=\"my-3 p-3 bg-danger text-white\">\n                {error.message}\n              </div>\n            )}\n          </div>\n        </div>\n      </div>\n    </main>\n  );\n};\n\nexport default Login;\n","import React, { useState } from 'react';\nimport { Form, Button, Alert } from 'react-bootstrap';\nimport { useMutation} from '@apollo/client';\n\nimport Auth from '../../utils/auth';\nimport { ADD_USER } from '../../utils/mutations';\n\n\nconst Signup = () => {\n  // set initial form state\n  const [userFormData, setUserFormData] = useState({ username: '', email: '', password: '' , firstName: '', lastName: ''});\n\n  const [addUser] = useMutation(ADD_USER);\n  // set state for form validation\n  const [validated] = useState(false);\n  // set state for alert\n  const [showAlert, setShowAlert] = useState(false);\n\n  const handleInputChange = (event) => {\n    const { name, value } = event.target;\n    setUserFormData({ ...userFormData, [name]: value });\n  };\n\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n\n    // check if form has everything (as per react-bootstrap docs)\n    const form = event.currentTarget;\n    if (form.checkValidity() === false) {\n      event.preventDefault();\n      event.stopPropagation();\n    }\n\n    try {\n      const { data } = await addUser({\n        variables: { ...userFormData },\n      });\n\n      \n      Auth.login(data.addUser.token);\n    } catch (err) {\n      console.error(err);\n      setShowAlert(true);\n    }\n\n    setUserFormData({\n      username: '',\n      email: '',\n      password: '',\n    });\n  };\n\n  return (\n    <>\n      {/* This is needed for the validation functionality above */}\n      <Form noValidate validated={validated} onSubmit={handleFormSubmit}>\n        {/* show alert if server response is bad */}\n        <Alert dismissible onClose={() => setShowAlert(false)} show={showAlert} variant='danger'>\n          Something went wrong with your signup!\n        </Alert>\n\n        <Form.Group>\n          <Form.Label htmlFor='firstName'>First Name</Form.Label>\n          <Form.Control\n            type='text'\n            placeholder='First Name'\n            name='firstName'\n            onChange={handleInputChange}\n            value={userFormData.firstName}\n            required\n          />\n          <Form.Control.Feedback type='invalid'>First Name is required!</Form.Control.Feedback>\n        </Form.Group>\n        <Form.Group>\n          <Form.Label htmlFor='firstName'>Last Name</Form.Label>\n          <Form.Control\n            type='text'\n            placeholder='Last Name'\n            name='lastName'\n            onChange={handleInputChange}\n            value={userFormData.lastName}\n            required\n          />\n          <Form.Control.Feedback type='invalid'>Last Name is required!</Form.Control.Feedback>\n        </Form.Group>\n        <Form.Group>\n          <Form.Label htmlFor='username'>Username</Form.Label>\n          <Form.Control\n            type='text'\n            placeholder='Your username'\n            name='username'\n            onChange={handleInputChange}\n            value={userFormData.username}\n            required\n          />\n          <Form.Control.Feedback type='invalid'>Username is required!</Form.Control.Feedback>\n        </Form.Group>\n\n        <Form.Group>\n          <Form.Label htmlFor='email'>Email</Form.Label>\n          <Form.Control\n            type='email'\n            placeholder='Your email address'\n            name='email'\n            onChange={handleInputChange}\n            value={userFormData.email}\n            required\n          />\n          <Form.Control.Feedback type='invalid'>Email is required!</Form.Control.Feedback>\n        </Form.Group>\n\n        <Form.Group>\n          <Form.Label htmlFor='password'>Password</Form.Label>\n          <Form.Control\n            type='password'\n            placeholder='Your password'\n            name='password'\n            onChange={handleInputChange}\n            value={userFormData.password}\n            required\n          />\n          <Form.Control.Feedback type='invalid'>Password is required!</Form.Control.Feedback>\n        </Form.Group>\n        \n        <Button\n          disabled={!(userFormData.username && userFormData.email && userFormData.password)}\n          type='submit'\n          variant='success'>\n          Submit\n        </Button>\n      </Form>\n    </>\n  );\n};\n\nexport default Signup;","import { gql } from '@apollo/client';\n\nexport const GET_ME = gql`\n    query me {\n        me {\n            _id\n            username\n            firstName\n            lastName\n            fandoms {\n                _id\n                description\n                name\n            }\n        }\n    }\n`;\n\nexport const GET_USERS = gql`\n    query users {\n        users {\n            _id\n            username\n            firstName\n            lastName\n            fandoms {\n                _id\n                description\n                name\n            }\n        }\n    }\n`;\n\nexport const GET_FANDOMS = gql`\n    query fandoms {\n        fandoms {\n            _id\n            name\n            description\n            image\n        }\n    }\n`;\n","import React, { useState } from 'react';\nimport { useMutation, useQuery } from \"@apollo/client\";\nimport Auth from '../../utils/auth';\n\nimport { GET_USERS } from \"../../utils/queries\";\nimport { ADD_MATCH } from \"../../utils/mutations\";\n\n\nexport default function Matches() {\n  const { loading, data } = useQuery(GET_USERS);\n  const users = data?.users || [];\n\n  // const [savedUserIds, setSavedUserIds] = useState(getSavedUserIds());\n  const [addMatch] = useMutation(ADD_MATCH)\n\n  const [userData, setUserData] = useState({});\n\n  const handleAddMatch = async (userId) => {\n\n    const userToSave = users.find((userId) => users._id === userId);\n\n    const token = Auth.loggedIn() ? Auth.getToken() : null;\n\n    if (!token) {\n      return false;\n    }\n\n    try {\n      const { data } = await addMatch({\n        variables: { ...userData },\n      });\n\n      Auth.login(data.users.token);\n\n      setUserData([...userData, userToSave.userId]);\n      // upon success, remove book's id from localStorage\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n\n  return (\n    <div>\n      <h1>Matches</h1>\n      <div className=\"row\" >\n      {users.map((user, index) => {\n        return (\n          <div className=\"col\" key={user._id}>\n          <div className=\"card\" style={{ width: `18rem` }}>\n            <img\n              className=\"card-img-top\"\n              src={`${user.image}`}\n              alt=\"users profile\"\n            />\n            <div className=\"card-body\">\n              <h5 className=\"card-title text-center\">{user.firstName} {user.lastName}</h5>\n              <h6 className=\"card-text\">Fandoms:</h6>\n              {user.fandoms.map((fandom) => {\n                return (\n                  <p className=\"card-text\" key={fandom._id}>{fandom.name}</p>\n                );\n              })}\n              <div className=\"text-center\">\n                <button className='btn-block btn-success' onClick={() => handleAddMatch(user._id)}>Add Match</button>\n              </div>\n            </div>\n          </div>\n          </div>\n          \n        );\n      })}\n      </div>\n    </div>\n  );\n}\n","import React, { useState } from \"react\";\nimport { useMutation, useQuery } from \"@apollo/client\";\nimport Auth from \"../../utils/auth\";\nimport \"./../assets/Profile.css\";\nimport ImageUploading from \"react-images-uploading\";\nimport ReactDom from \"react-dom\";\nimport SimpleFileUpload from 'react-simple-file-upload'\n\nimport { GET_ME } from \"../../utils/queries\";\nimport { GET_FANDOMS } from \"../../utils/queries\";\nimport { ADD_FANDOM } from \"../../utils/mutations\";\n\nexport default function Profile() {\n  // Daniel's edits\n  const [uploadedImages, setUploadedImages] = useState([])\n\n  function handleFile(url) {\n    setUploadedImages([...uploadedImages, url])\n    console.log('The URL of the file is ' + url)\n  }\n  // Jose's edits\n  const { load, pdata } = useQuery(GET_ME);\n  const profile = pdata?.me || {};\n\n  const { loading, data } = useQuery(GET_FANDOMS);\n  const fandoms = data?.fandoms || [];\n\n  const [userData, setUserData] = useState({});\n  const [checked, setChecked] = useState({});\n\n  // function toggle(index) {\n  //   const newData = [...userData];\n  //   newData.splice(index, 1, {\n  //     label: data[index].label,\n  //     checked: !data[index].checked\n  //   });\n  //   setData(newData);\n  //   onChange(newData.filter(x => x.checked));\n  // };\n\n  const userDataLength = Object.keys(userData).length;\n\n  const [updatedUser, { error }] = useMutation(ADD_FANDOM);\n  const handleAddFandom = async (fandomId) => {\n    const token = Auth.loggedIn() ? Auth.getToken() : null;\n\n    if (!token) {\n      return false;\n    }\n\n    try {\n      const { data } = await updatedUser({\n        variables: { ...userData },\n      });\n\n      setUserData(updatedUser);\n      // upon success, remove book's id from localStorage\n      // need to make in local storage js in utils\n      // addFandom(fandomId);\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  return (\n    <div>\n      <div>\n        <h1>Profile Page</h1>\n        <p>Profile Page goes here</p>\n      \n        <SimpleFileUpload\n          apiKey=\"a576e70cb4dce38730545ffcbe16a477\"\n          onSuccess={handleFile}\n        />\n\n      </div>\n      <div className='upload-wrapper'>\n        <div className=\"img-landing\">\n          <ul className=\"image-grid\">\n            {uploadedImages.length ? (\n              uploadedImages.map((image, index) => (index === 0 &&\n                <li>\n                  <img className=\"img-fluid profile-img\" src={image} alt=\"profile images\" />\n                </li>\n              ))\n            ) : (\n              <p></p>\n            )}\n          </ul>\n        </div>\n      </div>\n      <div className=\"container\">\n        <h1>{`${profile.name}'s`} Profile Page</h1>\n        <div className=\"container\">\n          <form action=\"\">\n            <div className=\"row\">\n              {fandoms.map((fandom, index) => {\n                return (\n                  <div className=\"card col-lg-4 col-md-6 col-sm-12\" style={{ width: `18rem` }} key={fandom._id}>\n                    <img\n                      className=\"card-img-top\"\n                      src={`${fandom.image}`}\n                      alt=\"fandom logo\"\n                    />\n                    <div className=\"card-body\">\n                      <h5 className=\"card-title text-center\">{fandom.name}</h5>\n                      <p className=\"card-text\">{fandom.description}</p>\n                      <div className=\"text-center\">\n                        <input\n                          type=\"checkbox\"\n                          value={`${fandom._id}`}\n                          className=\"btn-check\"\n                          id=\"btn-check-outlined\"\n                          autoComplete=\"off\"\n                        // onChange={toggle}\n                        />\n                        <label\n                          id=\"label\"\n                          className=\"btn btn-outline-primary\"\n                          htmlFor=\"btn-check-outlined\"\n                        >\n                          Add\n                        </label>\n                        <br></br>\n                      </div>\n                    </div>\n                  </div>\n                );\n              })}\n            </div>\n          </form>\n        </div>\n      </div>\n    </div>\n  );\n}\n","import React from \"react\";\n\nimport { Link } from \"react-router-dom\";\nimport \"../assets/Nav.css\";\nimport logo from \"../images/TFLogo.svg\";\n\nfunction NavTabs() {\n  return (\n    <nav className=\"navbar navbar-expand-lg navbar-light py-3\">\n    <a className=\"navbar-brand\" href=\"#\"><img src={logo} alt=\"Tandem Fandom\"/></a>\n    <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNav\" aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n    <span className=\"navbar-toggler-icon\"></span>\n  </button>\n\n  <div className=\"collapse navbar-collapse\" id=\"navbarNav\">\n    <ul className=\"navbar-nav mr-auto\">\n     \n      <li className=\"nav-item\">\n        <Link className=\"navbar-brand\" to=\"/Profile\">\n          Profile\n        </Link>\n      </li>\n\n      <li className=\"nav-item\">\n        <Link className=\"navbar-brand\" to=\"/Matches\">\n          Matches\n        </Link>\n      </li>\n\n      <li className=\"nav-item\">\n        <Link className=\"navbar-brand\" to=\"/Login\">\n          Login\n        </Link>\n      </li>\n\n      <li className=\"nav-item\">\n        <Link className=\"navbar-brand\" to=\"/Signup\">\n          Signup\n        </Link>\n      </li>\n    </ul>\n  </div>\n</nav>\n  );\n}\n\nexport default NavTabs;\n","import React from \"react\";\nimport \"../assets/Footer.css\";\n\nfunction Footer() {\n  return (\n    <div className=\"footer\">\n      <a href=\"http://www.github.com\">&copy; Copyright TandemFandom 2022</a>\n    </div>\n  );\n}\n\nexport default Footer;","import React from \"react\";\nimport \"./App.css\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\n\nimport Landing from \"./components/pages/Landing\";\nimport Main from \"./components/pages/Main\";\nimport Login from \"./components/pages/Login\";\nimport Signup from \"./components/pages/Signup\";\nimport Matches from \"./components/pages/Matches\";\nimport Profile from \"./components/pages/Profile\";\nimport Header from \"./components/layout/NavTabs\";\nimport Footer from \"./components/layout/Footer\";\n\nimport {\n  ApolloClient,\n  InMemoryCache,\n  ApolloProvider,\n  createHttpLink,\n} from \"@apollo/client\";\nimport { setContext } from \"@apollo/client/link/context\";\n\n// Construct our main GraphQL API endpoint\nconst httpLink = createHttpLink({\n  uri: \"/graphql\",\n});\n\n// Construct request middleware that will attach the JWT token to every request as an `authorization` header\nconst authLink = setContext((_, { headers }) => {\n  // get the authentication token from local storage if it exists\n  const token = localStorage.getItem(\"id_token\");\n  // return the headers to the context so httpLink can read them\n  return {\n    headers: {\n      ...headers,\n      authorization: token ? `Bearer ${token}` : \"\",\n    },\n  };\n});\n\nconst client = new ApolloClient({\n  // Set up our client to execute the `authLink` middleware prior to making the request to our GraphQL API\n  link: authLink.concat(httpLink),\n  cache: new InMemoryCache(),\n});\n\nfunction App() {\n  return (\n    <ApolloProvider client={client}>\n      <Router>\n        <div\n          className=\"flex-column justify-flex-start min-100-vh\"\n          style={{\n            backgroundColor: \"#e6f0ef\",\n          }}\n        >\n          <Header />\n          <div className=\"container\">\n            <Route exact path=\"/\">\n              <Landing />\n            </Route>\n\n            <Route exact path=\"/main\">\n              <Main />\n            </Route>\n\n            <Route exact path=\"/profile\">\n              <Profile />\n            </Route>\n\n            <Route exact path=\"/matches\">\n              <Matches />\n            </Route>\n\n            <Route exact path=\"/login\">\n              <Login />\n            </Route>\n            \n\n            <Route exact path=\"/signup\">\n              <Signup />\n            </Route>\n          </div>\n          <Footer />\n        </div>\n      </Router>\n    </ApolloProvider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","module.exports = __webpack_public_path__ + \"static/media/TFLogo_white.7d417152.svg\";","module.exports = __webpack_public_path__ + \"static/media/TFLogo.6cc8101f.svg\";"],"sourceRoot":""}